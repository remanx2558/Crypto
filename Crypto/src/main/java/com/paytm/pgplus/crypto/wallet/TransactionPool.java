package com.paytm.pgplus.crypto.wallet;

import com.paytm.pgplus.crypto.blockchain.Block;
import com.paytm.pgplus.crypto.blockchain.BlockChain;
import com.paytm.pgplus.crypto.util.GeneralUrils;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.logging.Logger;

import java.util.HashMap;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Service
public class TransactionPool {
    private static Logger LOGGER = Logger.getLogger(TransactionPool.class.getName());

    //Transaction Id: Transactions
    private HashMap<Integer, Transaction> transactionMap=new HashMap<>();
    public void TransactionPool(){
        transactionMap=new HashMap<>();
    }


    public void setTransaction(Transaction transaction){
        transactionMap.put(transaction.getId(), transaction);
    }

    public Transaction existingTransaction(String address){
        //seach all transaction generated by this adderess
        for(Transaction transaction : transactionMap.values()){
            if(transaction.getInput().get(address) == address) return transaction;
        }
        return null;
    }

    public ArrayList<Transaction> transactionData(){
        //  String jsonListTransaction= JsonHelper.ObjectTojsonString(list_tras);
        ArrayList<Transaction> list_tras= GeneralUrils.mapToListValue(transactionMap);
       return list_tras;
    }

    public void clearTransactionfromTransactionBasedonBlockChain(BlockChain blockChain) throws Exception {
        for (Block block: blockChain.getChain()){
            for(Transaction transaction : block.getTransactions().getTransactionArrayList()){
                if(transactionMap.containsKey(transaction.getId())){
                    String s = "key error";
                    try{
                        transactionMap.remove(transaction.getId());
                    }catch (Exception e){
                        LOGGER.info("key Error");
                    }
                }


            }
        }
    }

}
